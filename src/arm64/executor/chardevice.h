#ifndef ARM64_EXECUTOR_CHARDEV_H
#define ARM64_EXECUTOR_CHARDEV_H

#define REVISOR_IOC_MAGIC 'r'

#define REVISOR_CHECKOUT_TEST_CONSTANT		1
#define REVISOR_UNLOAD_TEST_CONSTANT		2
#define REVISOR_GET_NUMBER_OF_INPUTS_CONSTANT	3
#define REVISOR_CHECKOUT_INPUT_CONSTANT		4
#define REVISOR_ALLOCATE_INPUT_CONSTANT		5
#define REVISOR_FREE_INPUT_CONSTANT		6
#define REVISOR_MEASUREMENT_CONSTANT		7
#define REVISOR_TRACE_CONSTANT			8
#define REVISOR_CLEAR_ALL_INPUTS_CONSTANT	9
#define REVISOR_GET_TEST_LENGTH_CONSTANT	10

#define REVISOR_CHECKOUT_TEST      	_IO(REVISOR_IOC_MAGIC, REVISOR_CHECKOUT_TEST_CONSANT) // Can read test case and write test case
#define REVISOR_UNLOAD_TEST    		_IO(REVISOR_IOC_MAGIC, REVISOR_UNLOAD_TEST_CONSTANT)
#define REVISOR_GET_NUMBER_OF_INPUTS   	_IOR(REVISOR_IOC_MAGIC, REVISOR_GET_NUMBER_OF_INPUTS_CONSTANT, u64)
#define REVISOR_CHECKOUT_INPUT   	_IOW(REVISOR_IOC_MAGIC, REVISOR_CHECKOUT_INPUT_CONSTANT, u64) // point to input number id. Can read and write 
#define REVISOR_ALLOCATE_INPUT      	_IOR(REVISOR_IOC_MAGIC, REVISOR_ALLOCATE_INPUT_CONSTANT, u64) // allocate new input slot and get id
#define REVISOR_FREE_INPUT		_IOW(REVISOR_IOC_MAGIC, REVISOR_FREE_INPUT_CONSTANT, u64)	// free input id
#define REVISOR_MEASUREMENT		_IOR(REVISOR_IOC_MAGIC, REVISOR_MEASUREMENT_CONSTANT, measurement_t) // point to measurement area, can read
#define REVISOR_TRACE			_IO(REVISOR_IOC_MAGIC, REVISOR_TRACE_CONSTANT)
#define REVISOR_CLEAR_ALL_INPUTS	_IO(REVISOR_IOC_MAGIC, REVISOR_CLEAR_ALL_INPUTS_CONSTANT)
#define REVISOR_GET_TEST_LENGTH		_IOR(REVISOR_IOC_MAGIC, REVISOR_GET_TEST_LENGTH_CONSTANT, u64)

#define REVISOR_DEVICE_NAME		kernel_module_name	
#define REVISOR_DEVICE_CLASS_NAME	"revisor_device_class"
#define REVISOR_DEVICE_NODE_NAME	REVISOR_DEVICE_NAME"_control"

int initialize_device_interface(void);
void free_device_interface(void);

#endif
